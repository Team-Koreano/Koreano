plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

bootJar.enabled = false

subprojects {

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'

    repositories {
        mavenCentral()
    }

    // 관리하는 모듈의 공통 dependencies
    dependencies {

    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.1"
        }
    }

    jacoco {
        toolVersion = '0.8.10'
        setReportsDirectory(file("${rootDir}/.qodana/code-coverage"))
    }

    test {
        tasks.named('test') {
            useJUnitPlatform()
            systemProperty "jasypt.encryptor.password", project.getProperties().get("jasypt.encryptor.password")
        }
        useJUnitPlatform()
        finalizedBy 'jacocoTestReport'
    }

    jacocoTestReport {
        reports {
            html.required = false
            xml.required = true
        }
        finalizedBy 'jacocoTestCoverageVerification'
    }

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                enabled = true
                element = 'CLASS'
                // includes = []

                limit {
                    counter = 'LINE'
                    value = 'COVEREDRATIO'
                    minimum = 0.00
                }

                excludes = []
            }
        }
    }

    sourceCompatibility = '17'
}

project(':common'){
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        implementation 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    }
}

project(':user-api'){
    dependencies {
        implementation(project(':common'))

        //공통 모듈
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor("org.mapstruct:mapstruct-processor:1.5.3.Final")
        testAnnotationProcessor("org.mapstruct:mapstruct-processor:1.5.3.Final")
        implementation("org.mapstruct:mapstruct:1.5.3.Final")
        implementation("org.projectlombok:lombok-mapstruct-binding:0.2.0")
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        // @VisibleForTesting 의존성
        implementation 'com.google.guava:guava:32.1.2-jre'
        implementation 'com.google.auto.value:auto-value-annotations:1.8'



        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        testImplementation 'org.springframework.security:spring-security-test'
        implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
        runtimeOnly 'com.h2database:h2'
    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.1"
        }
    }
}

project(':bucket-api'){
    dependencies {
        implementation(project(':common'))

        //공통 모듈
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor("org.mapstruct:mapstruct-processor:1.5.3.Final")
        testAnnotationProcessor("org.mapstruct:mapstruct-processor:1.5.3.Final")
        implementation("org.mapstruct:mapstruct:1.5.3.Final")
        implementation("org.projectlombok:lombok-mapstruct-binding:0.2.0")
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        // @VisibleForTesting 의존성
        implementation 'com.google.guava:guava:32.1.2-jre'
        implementation 'com.google.auto.value:auto-value-annotations:1.8'


        implementation("org.springframework.boot:spring-boot-starter-data-jpa")
        runtimeOnly 'com.h2database:h2'
        testImplementation("org.springframework.boot:spring-boot-starter-test")
        implementation 'org.springframework.boot:spring-boot-starter-validation'
    }
}

project(':order-api'){
    dependencies {
        implementation(project(':common'))

        //공통 모듈
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor("org.mapstruct:mapstruct-processor:1.5.3.Final")
        testAnnotationProcessor("org.mapstruct:mapstruct-processor:1.5.3.Final")
        implementation("org.mapstruct:mapstruct:1.5.3.Final")
        implementation("org.projectlombok:lombok-mapstruct-binding:0.2.0")
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        // @VisibleForTesting 의존성
        implementation 'com.google.guava:guava:32.1.2-jre'
        implementation 'com.google.auto.value:auto-value-annotations:1.8'


        implementation("org.springframework.boot:spring-boot-starter-data-jpa")
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        runtimeOnly 'com.h2database:h2'

        // redis client
        implementation 'org.redisson:redisson-spring-boot-starter:3.29.0'
//         embedded redis
        implementation 'it.ozimov:embedded-redis:0.7.2'
        testImplementation 'it.ozimov:embedded-redis:0.7.2'

        testImplementation 'org.mockito:mockito-core:5.11.0'
    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.1"
        }
    }
}

project(':payment-api') {
    dependencies {
        implementation(project(':common'))

        //공통 모듈
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor("org.mapstruct:mapstruct-processor:1.5.3.Final")
        testAnnotationProcessor("org.mapstruct:mapstruct-processor:1.5.3.Final")
        implementation("org.mapstruct:mapstruct:1.5.3.Final")
        implementation("org.projectlombok:lombok-mapstruct-binding:0.2.0")
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        // @VisibleForTesting 의존성
        implementation 'com.google.guava:guava:32.1.2-jre'
        implementation 'com.google.auto.value:auto-value-annotations:1.8'


        testImplementation 'com.h2database:h2:2.2.222'
        implementation 'org.mariadb.jdbc:mariadb-java-client:3.3.3'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-openfeign
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        // redis client
        implementation 'org.redisson:redisson-spring-boot-starter:3.29.0'
        implementation 'it.ozimov:embedded-redis:0.7.2'
        testImplementation 'it.ozimov:embedded-redis:0.7.2'
    }
    compileJava {
        options.compilerArgs << '-parameters'
    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.1"
        }
    }
}

project(':statistic-api'){
    dependencies {
        implementation(project(':common'))
        //공통 모듈
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor("org.mapstruct:mapstruct-processor:1.5.3.Final")
        testAnnotationProcessor("org.mapstruct:mapstruct-processor:1.5.3.Final")
        implementation("org.mapstruct:mapstruct:1.5.3.Final")
        implementation("org.projectlombok:lombok-mapstruct-binding:0.2.0")
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        // @VisibleForTesting 의존성
        implementation 'com.google.guava:guava:32.1.2-jre'
        implementation 'com.google.auto.value:auto-value-annotations:1.8'
    }
}
