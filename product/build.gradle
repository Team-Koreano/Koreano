buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

repositories {
    mavenCentral()
}

def generated = 'src/main/generated'

def querydslDir = layout.buildDirectory.dir(generated).get().asFile

test {
    enabled = false
}

dependencies {
        implementation(project(':common'))

        //공통 모듈
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        runtimeOnly 'com.h2database:h2'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        // querydsl
        compileOnly "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
        annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = file(generated)
}

clean.doLast {
    file(querydslDir).deleteDir()
}